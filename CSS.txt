seccion 11

hay que hacer el enlace entre css y html
en el head de html escribir 
<link rel="stylesheet" href="css/estilos.css">
con ese enlace en cada página del sitio web
se hace el enlace para el mismo css

sintaxis de css
en css va el selector, es decir, la etiqueta
o el id o la class 
de html que vamos a modificar, luego 
abrir llaves y dentro poner la declaración,
el nombre de la propiedad que vamos a 
cambiar y el valor que le vamos a dar a 
esa propiedad

ej:

h2
{
color:blue;
}

tomar todos los h2 y ponerlos en color azul

las declaraciones pueden ponerse como en c++
de forma horizontal, separados por punto y 
coma, o de forma vertical, también separados 
por punto y coma

si queremos que el selector sea 
una etiqueta de html

nombre de la etiqueta
{}

id de html

#nombredelid
{}

class de html

.nombredelaclase
{}

resetear el css del navegador por defoult
los navegadores por defecto usan hojas
de estilos, y estos defoult se pueden 
resetear
Además, eso permite que en todos los
navegadores se vea igual nuestra página
usar normalize.css el codigo está
en internet 

comentarios
/*   kjfghkdhgdhg */


_____________

seccion 12

#
usar el numeral para agregar el css
de los id

#nombredelid
{}

.
usar el puno para agregar el css
de los class

.nombredelclass
{}


mezclar id con classs
poner en css el llamado al id y en seguida
el llamado a la class.
Se usa cuando en html una etiqueta tiene
id y tambien class

#nombredelid.nombredelclass
{}

en caso de que en css se haga otro llamado
solo para la class, ese no se tomará en 
cuenta, porque prevalece el que tiene más
jerarquía, en este caso, el que mezcla
id con class


selectores con dos class

puede pasar que en html tengamos etiquetas
con dos clases. Separados por espacio

esto va en html
<h2 class="nombre_p otro">hola</h2>

entonces en css se llama de la
siguiente manera

.nombre_p.otro
{}

o también así

.otro.nombre_p
{}


selectores para elementos de html

es lo que hemos estado viendo, pero en 
este caso, es más generico. Si uno quiere
que todos los p del sitio web o de la página
web tengan el mismo color
ponerlo en css normal

p
{
color:green;
}


selectores para elementos html con id

para ser más específico, si todos los p
estan de un solo color, pero hay un p que
tiene un id y ese va a ir de otro color

p#nombredelid
{}

ese selector tiene más peso


selectores para elementos html con class

también para ser más específico, si un 
section tiene también una clase y 
queremos qe tenga un fondo diferente

nombredelaetiqueta.nombredelclass
{}


selector universal

* 
{}

sirve para que todo en la página quede de 
un solo color o tenga una misma fuente
o un mismo tamaño...
Si un atributo no es tenido en cuenta
porque ya se incluyo en otro selector
de mayor peso que este,
escribir en seguida al atributo un 
!important;

*
{
color:red!important;
}

también sirve para que, si tengo un div
o un selection con alguna class o id 
específica y adentro hay muchas cosas, 
hacerle modificaciones a esas cosas
sin que tengamos que hacerlo una por una

.nombredelclass *
{}


selectores por grupo

si queremos que algun atributo cambie en 
varias etiquetas p, a, h2, h3... 
solo hay que separarlas por coma al hacer
la declaracion

a, p, h2
{}


selecores descendientes

si en html dentro del nav hay un ul, 
dentro del ul hay li y dentro de los li 
hay a entonces en css se puede escribir así
primero el mas general y al final los más
específicos, se van separando por espacios

nav
{}

nav ul
{}

nav ul li
{}

nav ul li a
{}


selector primer hijo

para cuando una etiqueta tiene dentro otra
etiqueta que tiene dentro otra etiqueta...
y queremos que algún atributo le cuente 
solo a alguna de las etiquetas que está 
interna

externa externa > interna
{}

así afectará solamente al interno

También es importante si hay varios en la 
misma jerarquia dentro de la misma etiqueta
por ejemplo, varios articles dentro de un 
section y solo queremos afectar a un solo
article



selector de elementos adyacentes
para modificar al selector que en html está 
inmediatamente seguido al que mencionamos 
primero

<h2 id="hola">sadas</h2>
<p>asdsdfsdfs</p>

en este caso, vamos a modificar p desde h2
en css

h2#hola + p
{}

así modificamos p 

Es útil cuando trabajamos con p y no podemos
acceder a los html que no tienen class


selector de enlaces
a[href*="google.com"]
{}


selectores para atributos de html
Si en html tenemos una etiqueta con atributo
podemos usar el nombre del atributo para
modificar la etiqueta en css

html
<h3 class="hola">slkdalj</h3>

css
[class="hola"]
{}

sería lo mismo que hacer
h3.hola
{}

y sería lo mismo que hacer
.hola
{}

Pero todos son útiles


selectores a paseudoclasses
en realidad es para hacer hover, focus y 
esas cosas
el más usado es hover

pero podemos usarlos todos de una vez

nombredelselector:focus,
nombredelselector:visited,
nombredelselector:active
{}

el más usado es el visited

de hecho se puede usar solo 
nombredelselector:visited
{}

y el hover si se usa casi siempre

nombredelselector:hover
{}



pseudoclass nth-child()

hijo nth

dentro de los parentecis va un numero

nombredelselector:nth-child(2)
{}

es decir, modifique el hijo 2 de todos los
hijos que hay dentro de nombredelselector

también se puede usar con tablas 
dentro de los parentesis puede ir odd o even

table tbody tr:nth-child(odd)
{}
para modificar solo los impares

table tbody tr:nth-child(even)
{}
para modificar solo los pares



___________

Seccion 13


font-family
para fuentes seguras (que siempre están en 
el pc) se pueden agregar varias, en caso
de que una no cargue, carga la siguiente 

h2
{
font-family: Arial, Helvetica, sans-serif;
}


font-size
tamaño
h2
{
font-size:10px;
}

rem y em son otras medidas, recomendadas 
para responsive



font-style
para hacer cambios entre normal y italic

normal deja la letra "normal" y sirve para
"remover" una etiqueta <em></em> que hayamos
puesto en html

h2 em
{
font-style:normal;
}

y italic sirve para dejarla en cursiva

h2
{
font-style:normal;
}



text-transform: uppercase
para que quede todo en mayúscula

text-transform: lowercase
para que quede todo en minúscula

text-transform: capitalize
para que quede todo con letras capitales
(mayúscula la primera)

h2
{
text-transform:uppercase
}


font-variant
para hacerlas todas mayusculas
pero la primera letra de cada palabra es 
más grande

h2
{
font-variant:small-caps;
}