seccion 11

hay que hacer el enlace entre css y html
en el head de html escribir 
<link rel="stylesheet" href="css/estilos.css">
con ese enlace en cada página del sitio web
se hace el enlace para el mismo css

sintaxis de css
en css va el selector, es decir, la etiqueta
o el id o la class 
de html que vamos a modificar, luego 
abrir llaves y dentro poner la declaración,
el nombre de la propiedad que vamos a 
cambiar y el valor que le vamos a dar a 
esa propiedad

ej:

h2
{
color:blue;
}

tomar todos los h2 y ponerlos en color azul

las declaraciones pueden ponerse como en c++
de forma horizontal, separados por punto y 
coma, o de forma vertical, también separados 
por punto y coma

si queremos que el selector sea 
una etiqueta de html

nombre de la etiqueta
{}

id de html

#nombredelid
{}

class de html

.nombredelaclase
{}

resetear el css del navegador por defoult
los navegadores por defecto usan hojas
de estilos, y estos defoult se pueden 
resetear
Además, eso permite que en todos los
navegadores se vea igual nuestra página
usar normalize.css el codigo está
en internet 

comentarios
/*   kjfghkdhgdhg */


_____________

seccion 12

#
usar el numeral para agregar el css
de los id

#nombredelid
{}

.
usar el puno para agregar el css
de los class

.nombredelclass
{}


mezclar id con classs
poner en css el llamado al id y en seguida
el llamado a la class.
Se usa cuando en html una etiqueta tiene
id y tambien class

#nombredelid.nombredelclass
{}

en caso de que en css se haga otro llamado
solo para la class, ese no se tomará en 
cuenta, porque prevalece el que tiene más
jerarquía, en este caso, el que mezcla
id con class


selectores con dos class

puede pasar que en html tengamos etiquetas
con dos clases. Separados por espacio

esto va en html
<h2 class="nombre_p otro">hola</h2>

entonces en css se llama de la
siguiente manera

.nombre_p.otro
{}

o también así

.otro.nombre_p
{}


selectores para elementos de html

es lo que hemos estado viendo, pero en 
este caso, es más generico. Si uno quiere
que todos los p del sitio web o de la página
web tengan el mismo color
ponerlo en css normal

p
{
color:green;
}


selectores para elementos html con id

para ser más específico, si todos los p
estan de un solo color, pero hay un p que
tiene un id y ese va a ir de otro color

p#nombredelid
{}

ese selector tiene más peso


selectores para elementos html con class

también para ser más específico, si un 
section tiene también una clase y 
queremos qe tenga un fondo diferente

nombredelaetiqueta.nombredelclass
{}


selector universal

* 
{}

sirve para que todo en la página quede de 
un solo color o tenga una misma fuente
o un mismo tamaño...
Si un atributo no es tenido en cuenta
porque ya se incluyo en otro selector
de mayor peso que este,
escribir en seguida al atributo un 
!important;

*
{
color:red!important;
}

también sirve para que, si tengo un div
o un selection con alguna class o id 
específica y adentro hay muchas cosas, 
hacerle modificaciones a esas cosas
sin que tengamos que hacerlo una por una

.nombredelclass *
{}


selectores por grupo

si queremos que algun atributo cambie en 
varias etiquetas p, a, h2, h3... 
solo hay que separarlas por coma al hacer
la declaracion

a, p, h2
{}


selecores descendientes

si en html dentro del nav hay un ul, 
dentro del ul hay li y dentro de los li 
hay a entonces en css se puede escribir así
primero el mas general y al final los más
específicos, se van separando por espacios

nav
{}

nav ul
{}

nav ul li
{}

nav ul li a
{}


selector primer hijo

para cuando una etiqueta tiene dentro otra
etiqueta que tiene dentro otra etiqueta...
y queremos que algún atributo le cuente 
solo a alguna de las etiquetas que está 
interna

externa externa > interna
{}

así afectará solamente al interno

También es importante si hay varios en la 
misma jerarquia dentro de la misma etiqueta
por ejemplo, varios articles dentro de un 
section y solo queremos afectar a un solo
article



selector de elementos adyacentes
para modificar al selector que en html está 
inmediatamente seguido al que mencionamos 
primero

<h2 id="hola">sadas</h2>
<p>asdsdfsdfs</p>

en este caso, vamos a modificar p desde h2
en css

h2#hola + p
{}

así modificamos p 

Es útil cuando trabajamos con p y no podemos
acceder a los html que no tienen class


selector de enlaces
a[href*="google.com"]
{}


selectores para atributos de html
Si en html tenemos una etiqueta con atributo
podemos usar el nombre del atributo para
modificar la etiqueta en css

html
<h3 class="hola">slkdalj</h3>

css
[class="hola"]
{}

sería lo mismo que hacer
h3.hola
{}

y sería lo mismo que hacer
.hola
{}

Pero todos son útiles


selectores a paseudoclasses
en realidad es para hacer hover, focus y 
esas cosas
el más usado es hover

pero podemos usarlos todos de una vez

nombredelselector:focus,
nombredelselector:visited,
nombredelselector:active
{}

el más usado es el visited

de hecho se puede usar solo 
nombredelselector:visited
{}

y el hover si se usa casi siempre

nombredelselector:hover
{}



pseudoclass nth-child()

hijo nth

dentro de los parentecis va un numero

nombredelselector:nth-child(2)
{}

es decir, modifique el hijo 2 de todos los
hijos que hay dentro de nombredelselector

también se puede usar con tablas 
dentro de los parentesis puede ir odd o even

table tbody tr:nth-child(odd)
{}
para modificar solo los impares

table tbody tr:nth-child(even)
{}
para modificar solo los pares



___________

Seccion 13


font-family
para fuentes seguras (que siempre están en 
el pc) se pueden agregar varias, en caso
de que una no cargue, carga la siguiente 

h2
{
font-family: Arial, Helvetica, sans-serif;
}


font-size
tamaño
h2
{
font-size:10px;
}

rem y em son otras medidas, recomendadas 
para responsive



font-style
para hacer cambios entre normal y italic

normal deja la letra "normal" y sirve para
"remover" una etiqueta <em></em> que hayamos
puesto en html

h2 em
{
font-style:normal;
}

y italic sirve para dejarla en cursiva

h2
{
font-style:normal;
}



text-transform: uppercase
para que quede todo en mayúscula

text-transform: lowercase
para que quede todo en minúscula

text-transform: capitalize
para que quede todo con letras capitales
(mayúscula la primera)

h2
{
text-transform:uppercase
}


font-variant
para hacerlas todas mayusculas
pero la primera letra de cada palabra es 
más grande

h2
{
font-variant:small-caps;
}


font-weight
para que esté bold o normal
también puede ser lighter

h4
{
font-weight:bold;
}


line-height
para interlineado
se mide en pixeles

h3
{
line-height:30px;
}

también sirve para centrar textos de
una sola linea
como h1 o h2 o h..


font
propiedad que puede tener un monton de 
valores, se usa para ahorrar codigo
y decirle a la letra que sea
italica con small.caps con font-weight
normal con font-size 30px/ con line-height
20px todo separado por espacios

a mi no me gusta casi

h2
{
font: italic small-caps normal 30px/20px;
}



text-align
para alinear el texto

puede ser 
center
right
left
justify

p
{
text-align:justify;
}


letter-spacing
para espaciado entre letras

h3
{
letter-spacing:3px;
}


text-indent
para indentar texto
hacer sangrías y esas cosas

h3
{
text-indent:10px;
}


______

seccion 14

contenedores


background
escoger el fondo del contenedor
pueden ser colores

div
{
background:red;
}
puede ser transparent


height y width
Para el ancho y alto de todos los 
contenedores
se pueden definir por px

img.class
{
height:100px
}

se pueden definir por & de la ventana

div 
{
width:20%
}

se pueden definir por ancho/alto completo

article
{
width:100vw;/*de viewport width*/
}



margin
Hay margenes arriba, abajo, izq y der

h3
{
margin-top:20px;
margin-bottom:50px;
margin-left:30px;
margin-right:10px;
}

también se puede en porcentajes

margin-right:10%;

para centrar el body usar el truco auto

margin-right:auto;
margin-left:auto; 


padding
hacia adentro del contenedor
tambien puede ser arriba, abajo. izq y der

h4
{
padding-top:30px;
padding-bottom:50px;
padding-left:100px;
}


atajo para margin y padding

usar solo la palabra margin y solo la 
palabra padding
los argumentos se separan por espacio y 
se escriben los valores en orden de las 
manecillas del reloj

h4
{
margin:20px 30px 20px 5px;
padding:0 5px 20px 15px 0;
}


colapso de margin

LO MEJOR ES NO HACER MARGENES HACIA ABAJO
SOLO HACIA ARRIBA Y HACIA LOS LADOS

posibles soluciones
poner en el contenedor las siguientes
declaraciones como si fuera cualquier 
atributo

overflow:hidden;
tambien
border.bottom: 1px solid black;



box-sizing:border-box;

para que al ponerle valores al padding 
o al border de algún contenedor, no se de
empiezen a "desacomodar" entre selectores

se puede incluir en los selectores 
que no queremos desacomodar o poniendo un 
selector universal al iniciar el css

*, *:before, *after
{
box-sizing: border-box;
}


bordes

con border-top
border-bottom
border-right
border-left


border-style:solid
tambien puede ser dashed o double

border-color



float y clearfix

float es para hacer los contenedores
flotantes y clearfix es una clase de html
para arreglarlo

.clearfix:before,
.clearfix:after{
	content:'';
	display: table;
}
.clearfix:after{
	clear:both;
}

PONERSELO AL CONTENEDOR PUEDE SERVIR
PARA QUE A LA IZQUIEDA QUEDE EL MAIN Y A LA
DERECHA QUEDE EL ASIDE



position:relative/absolute/fixed

RELATIVE PARA EL PADRE
ABSOLUTE PARA EL HIJO
FIXED PARA LO QUE SIEMPRE VA A ESTAR EN 
PANTALLA

position:relative; habilita las funciones
de bottom, top, right y left para el hijo


position:fixed 
generalmente se le pone a las barras del
header para que todo el tiempo esten
presentes.
en ese caso, hay que ver si ponerle margin
al contenedor principal para que no lo tape
lo que este en fixed


display
como va a ser el ancho del contenedor

display:none;
no permite que se vea el conenedor

display:block;
es el que viene por defecto, hace que el 
contenedor tenga un ancho del 100%
(como cuando le ponemos background a un 
h1 o h2 o h3 o hn)

display:inline;
toma el ancho del contenedor, como el ancho 
de lo que tiene adentro, en este caso, si 
se lo ponemos a un h3, el ancho de ese
contenedor terminará donde termine la letra 
que tiene ese h3
En este caso no se puede modificar ese 
ancho

display:inline-block;
es como inline, pero si se le puede
modificar el ancho y lo que hace es 
modificar el contenido del contenedor
es decir, reacomoda lo que hay de letra
en el contenedor

display:table/table-cell
cuando al tener un contenedor padre y 
un hijo que queremos centrar vertical
dentro de ese padre, al padre lo
ponemos en display:table y al hijo en 
display:table-cell.
al hijo le ponemos la propiedad 
vertical-aling:middle



border-radius
esquinas redondeadas

se ponen en pixeles, separando los 
argumentos por espacio

tambien se puede por porcentaje
border-radius:50%
para hacer circulos



background-image: url();
hay que pasarle la dereccion de la imagen
(../img/nombredelaimagen.extención);
.. es volver a la carpeta raíz

blackground-repeat:no-repeat
o repeat-x
o repeat-y

background-size:en pixeles;


background-position:
para acomodar el fondo
puede ser center center
o left bottom
o top right
o...
y también en pixeles, para moverse en x
y después en y

si hay varias imagenes en el fondo,
poner una coma despues de url y poner otro
url
De hecho en todas las propiedades de los 
fondos, se diferencia uno del otro
separando por , un fondo de otro


______________

seccion 15
Colores


por nombre de color

color:blue;
red
green
blue

poner el nombre del color
o backgroung:blue;


por hexadecimal
poner # y el hexadecimal

color:#325146;


por rgb
poner rgb(255,255,255)

por rgba
poner rgba(255,255,255,0.6)

por hsl
hsl(10, 15%, 20%)
tambien puede ser hsla(,,,0.2)


opacity
para la opacidad del selector completo
si por ejemplo tenemos un div y dentro hay 
imagenes, texto, fondo, etc... todo va a 
tener esa opacidad
va de 0 a 1 
0 no se ve nada del elemento
1 se ve perfecamente el elemento

opacity: 0.5;

es mejor usar rgba y hsla


Sombras
text-shadow:10px 10px 10px rgb(56,58,255)

para textos
enviar los valores de sobra horizontal
vertical blur (distorción) y el color de 
la sombra. El color de la sombra puede
ser en nombre del color, hexadecimal o 
rgb

box-shadow:10px 10px 10px 10px rgb(15,20,16)

para contenedores
tiene un valor más que es el de "expansión"
del borde


degradados

background: linear-gradient(,)
linear

poner adentro los dos colores

backgroung:radial-gradient(,)
radial

pomer los dos colores

pero lo mejor es usar
colorzilla. Es más fácil
y rápido